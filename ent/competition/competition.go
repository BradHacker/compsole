// Code generated by entc, DO NOT EDIT.

package competition

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the competition type in the database.
	Label = "competition"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldProviderType holds the string denoting the provider_type field in the database.
	FieldProviderType = "provider_type"
	// FieldProviderConfigFile holds the string denoting the provider_config_file field in the database.
	FieldProviderConfigFile = "provider_config_file"
	// EdgeCompetitionToTeams holds the string denoting the competitiontoteams edge name in mutations.
	EdgeCompetitionToTeams = "CompetitionToTeams"
	// Table holds the table name of the competition in the database.
	Table = "competitions"
	// CompetitionToTeamsTable is the table that holds the CompetitionToTeams relation/edge.
	CompetitionToTeamsTable = "teams"
	// CompetitionToTeamsInverseTable is the table name for the Team entity.
	// It exists in this package in order to avoid circular dependency with the "team" package.
	CompetitionToTeamsInverseTable = "teams"
	// CompetitionToTeamsColumn is the table column denoting the CompetitionToTeams relation/edge.
	CompetitionToTeamsColumn = "team_team_to_competition"
)

// Columns holds all SQL columns for competition fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldProviderType,
	FieldProviderConfigFile,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
