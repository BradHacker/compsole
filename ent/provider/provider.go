// Code generated by entc, DO NOT EDIT.

package provider

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the provider type in the database.
	Label = "provider"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldConfig holds the string denoting the config field in the database.
	FieldConfig = "config"
	// EdgeProviderToCompetitions holds the string denoting the providertocompetitions edge name in mutations.
	EdgeProviderToCompetitions = "ProviderToCompetitions"
	// Table holds the table name of the provider in the database.
	Table = "providers"
	// ProviderToCompetitionsTable is the table that holds the ProviderToCompetitions relation/edge.
	ProviderToCompetitionsTable = "competitions"
	// ProviderToCompetitionsInverseTable is the table name for the Competition entity.
	// It exists in this package in order to avoid circular dependency with the "competition" package.
	ProviderToCompetitionsInverseTable = "competitions"
	// ProviderToCompetitionsColumn is the table column denoting the ProviderToCompetitions relation/edge.
	ProviderToCompetitionsColumn = "competition_competition_to_provider"
)

// Columns holds all SQL columns for provider fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldType,
	FieldConfig,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
