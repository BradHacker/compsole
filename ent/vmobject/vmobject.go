// Code generated by entc, DO NOT EDIT.

package vmobject

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the vmobject type in the database.
	Label = "vm_object"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIdentifier holds the string denoting the identifier field in the database.
	FieldIdentifier = "identifier"
	// FieldIPAddresses holds the string denoting the ip_addresses field in the database.
	FieldIPAddresses = "ip_addresses"
	// EdgeToTeam holds the string denoting the toteam edge name in mutations.
	EdgeToTeam = "ToTeam"
	// Table holds the table name of the vmobject in the database.
	Table = "vm_objects"
	// ToTeamTable is the table that holds the ToTeam relation/edge. The primary key declared below.
	ToTeamTable = "vm_object_ToTeam"
	// ToTeamInverseTable is the table name for the Team entity.
	// It exists in this package in order to avoid circular dependency with the "team" package.
	ToTeamInverseTable = "teams"
)

// Columns holds all SQL columns for vmobject fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldIdentifier,
	FieldIPAddresses,
}

var (
	// ToTeamPrimaryKey and ToTeamColumn2 are the table columns denoting the
	// primary key for the ToTeam relation (M2M).
	ToTeamPrimaryKey = []string{"vm_object_id", "team_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
