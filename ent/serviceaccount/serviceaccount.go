// Code generated by entc, DO NOT EDIT.

package serviceaccount

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the serviceaccount type in the database.
	Label = "service_account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldAPIKey holds the string denoting the api_key field in the database.
	FieldAPIKey = "api_key"
	// FieldAPISecret holds the string denoting the api_secret field in the database.
	FieldAPISecret = "api_secret"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// EdgeServiceAccountToToken holds the string denoting the serviceaccounttotoken edge name in mutations.
	EdgeServiceAccountToToken = "ServiceAccountToToken"
	// EdgeServiceAccountToActions holds the string denoting the serviceaccounttoactions edge name in mutations.
	EdgeServiceAccountToActions = "ServiceAccountToActions"
	// ServiceTokenFieldID holds the string denoting the ID field of the ServiceToken.
	ServiceTokenFieldID = "id"
	// Table holds the table name of the serviceaccount in the database.
	Table = "service_accounts"
	// ServiceAccountToTokenTable is the table that holds the ServiceAccountToToken relation/edge.
	ServiceAccountToTokenTable = "service_tokens"
	// ServiceAccountToTokenInverseTable is the table name for the ServiceToken entity.
	// It exists in this package in order to avoid circular dependency with the "servicetoken" package.
	ServiceAccountToTokenInverseTable = "service_tokens"
	// ServiceAccountToTokenColumn is the table column denoting the ServiceAccountToToken relation/edge.
	ServiceAccountToTokenColumn = "service_account_service_account_to_token"
	// ServiceAccountToActionsTable is the table that holds the ServiceAccountToActions relation/edge.
	ServiceAccountToActionsTable = "actions"
	// ServiceAccountToActionsInverseTable is the table name for the Action entity.
	// It exists in this package in order to avoid circular dependency with the "action" package.
	ServiceAccountToActionsInverseTable = "actions"
	// ServiceAccountToActionsColumn is the table column denoting the ServiceAccountToActions relation/edge.
	ServiceAccountToActionsColumn = "service_account_service_account_to_actions"
)

// Columns holds all SQL columns for serviceaccount fields.
var Columns = []string{
	FieldID,
	FieldDisplayName,
	FieldAPIKey,
	FieldAPISecret,
	FieldActive,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
