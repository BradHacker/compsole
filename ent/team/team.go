// Code generated by entc, DO NOT EDIT.

package team

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the team type in the database.
	Label = "team"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldTeamNumber holds the string denoting the team_number field in the database.
	FieldTeamNumber = "team_number"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeToVmObjects holds the string denoting the tovmobjects edge name in mutations.
	EdgeToVmObjects = "ToVmObjects"
	// Table holds the table name of the team in the database.
	Table = "teams"
	// ToVmObjectsTable is the table that holds the ToVmObjects relation/edge. The primary key declared below.
	ToVmObjectsTable = "vm_object_ToTeam"
	// ToVmObjectsInverseTable is the table name for the VmObject entity.
	// It exists in this package in order to avoid circular dependency with the "vmobject" package.
	ToVmObjectsInverseTable = "vm_objects"
)

// Columns holds all SQL columns for team fields.
var Columns = []string{
	FieldID,
	FieldTeamNumber,
	FieldName,
}

var (
	// ToVmObjectsPrimaryKey and ToVmObjectsColumn2 are the table columns denoting the
	// primary key for the ToVmObjects relation (M2M).
	ToVmObjectsPrimaryKey = []string{"vm_object_id", "team_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
