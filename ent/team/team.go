// Code generated by entc, DO NOT EDIT.

package team

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the team type in the database.
	Label = "team"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "oid"
	// FieldTeamNumber holds the string denoting the team_number field in the database.
	FieldTeamNumber = "team_number"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeTeamToCompetition holds the string denoting the teamtocompetition edge name in mutations.
	EdgeTeamToCompetition = "TeamToCompetition"
	// EdgeTeamToVmObjects holds the string denoting the teamtovmobjects edge name in mutations.
	EdgeTeamToVmObjects = "TeamToVmObjects"
	// EdgeTeamToUsers holds the string denoting the teamtousers edge name in mutations.
	EdgeTeamToUsers = "TeamToUsers"
	// Table holds the table name of the team in the database.
	Table = "teams"
	// TeamToCompetitionTable is the table that holds the TeamToCompetition relation/edge.
	TeamToCompetitionTable = "teams"
	// TeamToCompetitionInverseTable is the table name for the Competition entity.
	// It exists in this package in order to avoid circular dependency with the "competition" package.
	TeamToCompetitionInverseTable = "competitions"
	// TeamToCompetitionColumn is the table column denoting the TeamToCompetition relation/edge.
	TeamToCompetitionColumn = "team_team_to_competition"
	// TeamToVmObjectsTable is the table that holds the TeamToVmObjects relation/edge.
	TeamToVmObjectsTable = "vm_objects"
	// TeamToVmObjectsInverseTable is the table name for the VmObject entity.
	// It exists in this package in order to avoid circular dependency with the "vmobject" package.
	TeamToVmObjectsInverseTable = "vm_objects"
	// TeamToVmObjectsColumn is the table column denoting the TeamToVmObjects relation/edge.
	TeamToVmObjectsColumn = "vm_object_vm_object_to_team"
	// TeamToUsersTable is the table that holds the TeamToUsers relation/edge.
	TeamToUsersTable = "users"
	// TeamToUsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	TeamToUsersInverseTable = "users"
	// TeamToUsersColumn is the table column denoting the TeamToUsers relation/edge.
	TeamToUsersColumn = "user_user_to_team"
)

// Columns holds all SQL columns for team fields.
var Columns = []string{
	FieldID,
	FieldTeamNumber,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "teams"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"team_team_to_competition",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
